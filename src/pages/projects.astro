---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
//import HomeFooter from '../components/HomeFooter.astro';

---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			.title {
				margin: 0;
				color: rgb(var(--black));
				line-height: 1;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
			}
		</style>
	</head>
	<body>
		<Header />
		<main class="w-1/2 mx-auto mt-8 mb-20">
			<section class="grid grid-cols-2 gap-x-8 gap-y-4">
                <!--Vite.NET-->
                <div>
					<h1 class="flex justify-center mb-8">Vite.NET</h1>
					<p class="mb-3">Vite.NET is a set of backend and front-end tools in order to easily integrate ASP.NET Core backends with Vite powered Single Page Applications.</p>
					<p>The library is comprised of two packages, a Nuget package for simple integration into .NET sites and an NPM package that contains a Vite plugin that reconfigures Vite defaults to play better with ASP.NET Core.</p>
					<div class="flex justify-center mt-12">
						<span class="bg-red-900 rounded-md text-white px-4 py-2 hover:bg-red-700">
							<a href="https://vite-dotnet.techgems.net/" target="_blank">Go to Project</a>
						</span>
					</div>
				</div>
                <!--Razor Component Tag Helpers-->
                <div>
					<h1 class="flex justify-center mb-8">
						Razor Component Tag Helpers
					</h1>
					<p>
						Razor Component Tag Helpers is a minimalistic ASP.NET Core library that allows you to write UI components while maintaining compatibility with Razor Pages and MVC.
						This library will work for you if youâ€™re working on an MVC or Razor Pages only project and you wish to have better UI composition. It can be of help both in modernizing and organizing older projects as well as starting new ones where using a single page application framework is considered unnecessary due to lack of heavy UI interactions or simply familiarity with the MVC pattern.
					</p>
					<div class="flex justify-center mt-12">
						<span class="bg-red-900 rounded-md text-white px-4 py-2 hover:bg-red-700">
							<a href="https://razor-components.techgems.net/" target="_blank">Go to Project</a>
						</span>
					</div>
				</div>
                <!--Windy UI-->
                <div>
					<h1 class="flex justify-center mb-8">Windy UI</h1>
					<p>
						Windy UI is Tailwind UI based Blazor library. It is not meant to 
						be a fully fledged component library, but rather, a starter for 
						anyone to change and build their own custom Tailwind powered component library.

						Windy UI contains full support for Blazor form components and validations,
						as well as modals, icons, navigation, notifications and customizable color theming.
					</p>
					<div class="flex justify-center mt-12">
						<span class="bg-red-900 rounded-md text-white px-4 py-2 hover:bg-red-700">
							<a href="https://windy-ui.techgems.net/" target="_blank">Go to Project</a>
						</span>
					</div>
				</div>
			</section>
		</main>
	</body>
</html>
